{"ast":null,"code":"import _defineProperty from \"/Users/stanley/Desktop/IPFS/Ecommerce/react-ecommerce-main/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/stanley/Desktop/IPFS/Ecommerce/react-ecommerce-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/stanley/Desktop/IPFS/Ecommerce/react-ecommerce-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/stanley/Desktop/IPFS/Ecommerce/react-ecommerce-main/src/components/SellerDashboard/TrackProducts.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\"; // Icons\n\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3),\n      overflowX: \"auto\"\n    },\n    table: {\n      minWidth: 650\n    },\n    selectTableCell: {\n      width: 60\n    },\n    tableCell: {\n      width: 130,\n      height: 40\n    },\n    input: {\n      width: 130,\n      height: 40\n    }\n  };\n});\n\nvar CustomTableCell = function CustomTableCell(_ref) {\n  _s();\n\n  var row = _ref.row,\n      name = _ref.name,\n      _onChange = _ref.onChange;\n  var classes = useStyles();\n  var isEditMode = row.isEditMode;\n  return /*#__PURE__*/_jsxDEV(TableCell, {\n    align: \"left\",\n    className: classes.tableCell,\n    children: isEditMode ? /*#__PURE__*/_jsxDEV(Input, {\n      value: row[name],\n      name: name,\n      onChange: function onChange(e) {\n        return _onChange(e, row);\n      },\n      className: classes.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, _this) : row[name]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CustomTableCell, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomTableCell;\n\nvar createData = function createData(name, calories, fat, carbs, protein) {\n  return {\n    id: name.replace(\" \", \"_\"),\n    name: name,\n    calories: calories,\n    fat: fat,\n    carbs: carbs,\n    protein: protein,\n    isEditMode: false\n  };\n};\n\nvar TrackProducts = function TrackProducts(_ref2) {\n  _s2();\n\n  var products = _ref2.products;\n  // const product = products.map(product => {   return createData(product.name, product.price, product.quantity, product.description, product.category); });\n  var product = products.map(function (product) {\n    return createData(product.name, product.price, product.quantity, product.description, product.category);\n  });\n  console.log(\"xxproduct\", product); // const [rows, setRows] = useState([\n  //   createData(\"Kettle\", 159, 6.0, 24, 4.0),\n  //   createData(\"Book\", 237, 9.0, 37, 4.3),\n  //   createData(\"Coffee\", 262, 16.0, 24, 6.0)\n  // ]);\n\n  UseEffect(function () {\n    console.log(\"useeffect\");\n  }, [products]);\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      previous = _React$useState2[0],\n      setPrevious = _React$useState2[1];\n\n  var classes = useStyles();\n\n  var onToggleEditMode = function onToggleEditMode(id) {\n    setRows(function (state) {\n      return rows.map(function (row) {\n        if (row.id === id) {\n          return _objectSpread(_objectSpread({}, row), {}, {\n            isEditMode: !row.isEditMode\n          });\n        }\n\n        return row;\n      });\n    });\n  };\n\n  var onChange = function onChange(e, row) {\n    if (!previous[row.id]) {\n      setPrevious(function (state) {\n        return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, row.id, row));\n      });\n    }\n\n    var value = e.target.value;\n    var name = e.target.name;\n    var id = row.id;\n    var newRows = rows.map(function (row) {\n      if (row.id === id) {\n        return _objectSpread(_objectSpread({}, row), {}, _defineProperty({}, name, value));\n      }\n\n      return row;\n    });\n    setRows(newRows);\n  };\n\n  var onRevert = function onRevert(id) {\n    var newRows = rows.map(function (row) {\n      if (row.id === id) {\n        return previous[id] ? previous[id] : row;\n      }\n\n      return row;\n    });\n    setRows(newRows);\n    setPrevious(function (state) {\n      delete state[id];\n      return state;\n    });\n    onToggleEditMode(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"caption table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Listed Price\\xA0($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Product Description \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Original Cost\\xA0($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(function (row) {\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.selectTableCell,\n              children: row.isEditMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"done\",\n                  onClick: function onClick() {\n                    return onToggleEditMode(row.id);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"revert\",\n                  onClick: function onClick() {\n                    return onRevert(row.id);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(RevertIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"delete\",\n                onClick: function onClick() {\n                  return onToggleEditMode(row.id);\n                },\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n              row: row,\n              name: \"name\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n              row: row,\n              name: \"calories\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n              row: row,\n              name: \"fat\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n              row: row,\n              name: \"carbs\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n              row: row,\n              name: \"protein\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, _this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(TrackProducts, \"dUWNW4s4M/T/vIf92BwOeajpuQQ=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = TrackProducts;\nexport default TrackProducts;\nexport { TrackProducts };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomTableCell\");\n$RefreshReg$(_c2, \"TrackProducts\");","map":{"version":3,"sources":["/Users/stanley/Desktop/IPFS/Ecommerce/react-ecommerce-main/src/components/SellerDashboard/TrackProducts.js"],"names":["React","useState","useEffect","ReactDOM","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Input","Paper","IconButton","EditIcon","DoneIcon","RevertIcon","useStyles","theme","root","width","marginTop","spacing","overflowX","table","minWidth","selectTableCell","tableCell","height","input","CustomTableCell","row","name","onChange","classes","isEditMode","e","createData","calories","fat","carbs","protein","id","replace","TrackProducts","products","product","map","price","quantity","description","category","console","log","UseEffect","previous","setPrevious","onToggleEditMode","setRows","state","rows","value","target","newRows","onRevert"],"mappings":"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","sourcesContent":["\nimport React, {useState, useEffect} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\n// Icons\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 650\n  },\n  selectTableCell: {\n    width: 60\n  },\n  tableCell: {\n    width: 130,\n    height: 40\n  },\n  input: {\n    width: 130,\n    height: 40\n  }\n}));\n\n\n\nconst CustomTableCell = ({ row, name, onChange }) => {\n  const classes = useStyles();\n  const { isEditMode } = row;\n  return (\n    <TableCell align=\"left\" className={classes.tableCell}>\n      {isEditMode ? (\n        <Input\n          value={row[name]}\n          name={name}\n          onChange={e => onChange(e, row)}\n          className={classes.input}\n        />\n      ) : (\n        row[name]\n      )}\n    </TableCell>\n  );\n};\n\nconst createData = (name, calories, fat, carbs, protein) => ({\n  id: name.replace(\" \", \"_\"),\n  name,\n  calories,\n  fat,\n  carbs,\n  protein,\n  isEditMode: false\n});\n\n\nconst TrackProducts = ({products}) => {\n\n\n  // const product = products.map(product => {   return createData(product.name, product.price, product.quantity, product.description, product.category); });\nconst product = products.map(product => {   return createData(product.name, product.price, product.quantity, product.description, product.category); });\nconsole.log(\"xxproduct\", product);\n  // const [rows, setRows] = useState([\n  //   createData(\"Kettle\", 159, 6.0, 24, 4.0),\n  //   createData(\"Book\", 237, 9.0, 37, 4.3),\n  //   createData(\"Coffee\", 262, 16.0, 24, 6.0)\n  // ]);\n\n  UseEffect(()=>{\n    console.log(\"useeffect\");\n   }, [products]);\n  \n  const [previous, setPrevious] = React.useState({});\n  const classes = useStyles();\n\n  const onToggleEditMode = id => {\n    setRows(state => {\n      return rows.map(row => {\n        if (row.id === id) {\n          return { ...row, isEditMode: !row.isEditMode };\n        }\n        return row;\n      });\n    });\n  };\n\n  const onChange = (e, row) => {\n    if (!previous[row.id]) {\n      setPrevious(state => ({ ...state, [row.id]: row }));\n    }\n    const value = e.target.value;\n    const name = e.target.name;\n    const { id } = row;\n    const newRows = rows.map(row => {\n      if (row.id === id) {\n        return { ...row, [name]: value };\n      }\n      return row;\n    });\n    setRows(newRows);\n  };\n\n  const onRevert = id => {\n    const newRows = rows.map(row => {\n      if (row.id === id) {\n        return previous[id] ? previous[id] : row;\n      }\n      return row;\n    });\n    setRows(newRows);\n    setPrevious(state => {\n      delete state[id];\n      return state;\n    });\n    onToggleEditMode(id);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table} aria-label=\"caption table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\" />\n            <TableCell align=\"left\">Product Name</TableCell>\n            <TableCell align=\"left\">Quantity</TableCell>\n            <TableCell align=\"left\">Listed Price&nbsp;($)</TableCell>\n            <TableCell align=\"left\">Product Description </TableCell>\n            <TableCell align=\"left\">Original Cost&nbsp;($)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell className={classes.selectTableCell}>\n                {row.isEditMode ? (\n                  <>\n                    <IconButton\n                      aria-label=\"done\"\n                      onClick={() => onToggleEditMode(row.id)}\n                    >\n                      <DoneIcon />\n                    </IconButton>\n                    <IconButton\n                      aria-label=\"revert\"\n                      onClick={() => onRevert(row.id)}\n                    >\n                      <RevertIcon />\n                    </IconButton>\n                  </>\n                ) : (\n                  <IconButton\n                    aria-label=\"delete\"\n                    onClick={() => onToggleEditMode(row.id)}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                )}\n              </TableCell>\n              <CustomTableCell {...{ row, name: \"name\", onChange }} />\n              <CustomTableCell {...{ row, name: \"calories\", onChange }} />\n              <CustomTableCell {...{ row, name: \"fat\", onChange }} />\n              <CustomTableCell {...{ row, name: \"carbs\", onChange }} />\n              <CustomTableCell {...{ row, name: \"protein\", onChange }} />\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nexport default TrackProducts;\nexport {TrackProducts};\n\n"]},"metadata":{},"sourceType":"module"}