{"ast":null,"code":"var _jsxFileName = \"/Users/stanley/Desktop/IPFS/Ecommerce/react-ecommerce-main/src/components/SellerDashboard/TrackProducts.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useStyles from './styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { AddRowsData } from './AddRowsData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar TrackProducts = function TrackProducts(_ref) {\n  _s();\n\n  var props = _ref.props;\n  var classes = useStyles();\n  var rows = [createData('Bitcoin', 10, 10, 1, 2, 'YES'), createData('Ada', 237, 9.0, 37, 10, 'NO'), createData('Doged', 262, 16.0, 24, 5, 'PAUSE') // createData('Shiba Inu',305,3.7,67,4,'BlockFi'),\n  // createData('Ethereum Classic',356,16.0,49,1,'CoinMarketCap'),\n  ];\n\n  function createData(coinName, totalCoins, totalInvestment, avgCost, currentPrice, totalReturn, exchange) {\n    return {\n      coinName: coinName,\n      totalCoins: totalCoins,\n      totalInvestment: totalInvestment,\n      avgCost: avgCost,\n      currentPrice: currentPrice,\n      totalReturn: totalReturn,\n      exchange: exchange,\n\n      /*this will move to redux store*/\n      details: [// {taxed: 'Y', deposit: 'Y', noOfDepositCoins: '250', contractPeriod: '3 months',apy: '2%', netProfit: '1000', alarm:'Y'},\n      // {taxed: 'N', deposit: 'N', noOfDepositCoins: '250', contractPeriod: 'Nan',apy: '2%', netProfit: '1000', alarm: 'N'},\n      {\n        taxed: 'Y',\n        netProfit: '1000',\n        alarm: true\n      }, {\n        taxed: 'N',\n        netProfit: '1000',\n        alarm: false\n      }]\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"collapsible table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Total Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Listed Price\\xA0($)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Product Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Original Price\\xA0($)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Outstanding Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Enable ?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 9\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 5\n        }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.map(function (row) {\n            return /*#__PURE__*/_jsxDEV(AddRowsData, {\n              row: row\n            }, row.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 9\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 5\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 3\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }, _this)\n  }, void 0, false);\n};\n\n_s(TrackProducts, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = TrackProducts;\nexport default TrackProducts;\nexport { TrackProducts };\n\nvar _c;\n\n$RefreshReg$(_c, \"TrackProducts\");","map":{"version":3,"sources":["/Users/stanley/Desktop/IPFS/Ecommerce/react-ecommerce-main/src/components/SellerDashboard/TrackProducts.js"],"names":["React","useStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","AddRowsData","TrackProducts","props","classes","rows","createData","coinName","totalCoins","totalInvestment","avgCost","currentPrice","totalReturn","exchange","details","taxed","netProfit","alarm","map","row","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport useStyles from './styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {AddRowsData} from './AddRowsData';\n\nconst TrackProducts = ({props}) => {\n  const classes = useStyles();\n\n  const rows = [\n    createData('Bitcoin',10,10,1,2,'YES'),\n    createData('Ada',237,9.0,37,10,'NO'),\n    createData('Doged',262,16.0,24,5,'PAUSE'),\n    // createData('Shiba Inu',305,3.7,67,4,'BlockFi'),\n    // createData('Ethereum Classic',356,16.0,49,1,'CoinMarketCap'),\n  ];\n\n  function createData(coinName, totalCoins, totalInvestment, avgCost, currentPrice, totalReturn, exchange) {\n    return {\n      coinName,\n      totalCoins,\n      totalInvestment,\n      avgCost,\n      currentPrice,\n      totalReturn,\n      exchange,\n      /*this will move to redux store*/\n      details: [\n        // {taxed: 'Y', deposit: 'Y', noOfDepositCoins: '250', contractPeriod: '3 months',apy: '2%', netProfit: '1000', alarm:'Y'},\n        // {taxed: 'N', deposit: 'N', noOfDepositCoins: '250', contractPeriod: 'Nan',apy: '2%', netProfit: '1000', alarm: 'N'},\n        {taxed: 'Y', netProfit: '1000', alarm:true},\n        {taxed: 'N', netProfit: '1000', alarm:false},\n      ],\n    };\n  }\n\nreturn(\n  <>\n  <TableContainer component={Paper}>\n  <Table aria-label=\"collapsible table\">\n    <TableHead>\n      <TableRow>\n        <TableCell />\n        <TableCell>Product Name</TableCell>\n        <TableCell>Total Quantity</TableCell>\n        <TableCell>Listed Price&nbsp;($)</TableCell>\n        <TableCell>Product Description</TableCell>\n        {/* <TableCell>Media Url</TableCell> */}\n        {/* <TableCell>Total Cost&nbsp;($)</TableCell> */}\n        {/* <TableCell>Avg Original Cost&nbsp;($)</TableCell> */}\n      \n        \n        {/* <TableCell>Total Return&nbsp;($) </TableCell> */}\n        <TableCell>Original Price&nbsp;($)</TableCell>\n        <TableCell>Outstanding Quantity</TableCell>\n        <TableCell>Enable ?</TableCell>\n      </TableRow>\n    </TableHead>\n    <TableBody>\n      {/* Create Row */}\n      {rows.map((row) => (\n        <AddRowsData key={row.name} row={row} />\n      ))}\n    </TableBody>\n  </Table>\n</TableContainer>\n</>\n);\n}\nexport default TrackProducts;\nexport {TrackProducts};"]},"metadata":{},"sourceType":"module"}