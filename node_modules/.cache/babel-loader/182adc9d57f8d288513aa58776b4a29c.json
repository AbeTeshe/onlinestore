{"ast":null,"code":"import _defineProperty from \"/Users/stanley/Desktop/IPFS/Ecommerce/react-ecommerce-main/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/stanley/Desktop/IPFS/Ecommerce/react-ecommerce-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/stanley/Desktop/IPFS/Ecommerce/react-ecommerce-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/stanley/Desktop/IPFS/Ecommerce/react-ecommerce-main/src/components/SellerDashboard/TrackProducts.js\",\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\"; // Icons\n\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateProduct } from \"../../core/mainSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3),\n      overflowX: \"auto\"\n    },\n    table: {\n      minWidth: 650\n    },\n    selectTableCell: {\n      width: 60\n    },\n    tableCell: {\n      // width: 130,\n      // height: 40\n      width: 290,\n      height: 40\n    },\n    input: {\n      width: 130,\n      height: 40\n    }\n  };\n});\n\nvar TrackProducts = function TrackProducts() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var dispatch = useDispatch();\n  var products = useSelector(function (state) {\n    var _state$main;\n\n    return state === null || state === void 0 ? void 0 : (_state$main = state.main) === null || _state$main === void 0 ? void 0 : _state$main.products;\n  });\n\n  var _useState = useState(products),\n      _useState2 = _slicedToArray(_useState, 2),\n      rows = _useState2[0],\n      setRows = _useState2[1];\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      previous = _React$useState2[0],\n      setPrevious = _React$useState2[1];\n\n  var classes = useStyles();\n\n  var onToggleEditMode = function onToggleEditMode(id) {\n    setRows(function (state) {\n      return rows.map(function (row) {\n        if (row.id === id) {\n          return _objectSpread(_objectSpread({}, row), {}, {\n            isEditMode: !row.isEditMode\n          });\n        }\n\n        return row;\n      });\n    });\n  };\n\n  var onChange = function onChange(e, row) {\n    if (!previous[row.id]) {\n      setPrevious(function (state) {\n        return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, row.id, row));\n      });\n    }\n\n    var value = e.target.value;\n    var name = e.target.name;\n    dispatch(updateProduct({\n      value: value,\n      name: name,\n      id: row.id\n    }));\n    var id = row.id;\n    var newRows = rows.map(function (row) {\n      if (row.id === id) {\n        return _objectSpread(_objectSpread({}, row), {}, _defineProperty({}, name, value));\n      }\n\n      return row;\n    });\n    setRows(newRows);\n  };\n\n  var onRevert = function onRevert(id) {\n    var newRows = rows.map(function (row) {\n      if (row.id === id) {\n        return previous[id] ? previous[id] : row;\n      }\n\n      return row;\n    });\n    setRows(newRows);\n    setPrevious(function (state) {\n      delete state[id];\n      return state;\n    });\n    onToggleEditMode(id);\n  };\n\n  var CustomTableCell = function CustomTableCell(_ref) {\n    _s();\n\n    var row = _ref.row,\n        name = _ref.name,\n        _onChange = _ref.onChange;\n    var classes = useStyles();\n    var isEditMode = row.isEditMode;\n    return /*#__PURE__*/_jsxDEV(TableCell, {\n      align: \"left\",\n      className: classes.tableCell,\n      children: isEditMode ? /*#__PURE__*/_jsxDEV(Input, {\n        value: row[name],\n        name: name,\n        onChange: function onChange(e) {\n          return _onChange(e, row);\n        },\n        className: classes.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, _this) : row[name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, _this);\n  };\n\n  _s(CustomTableCell, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n    return [useStyles];\n  });\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"caption table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Product Description \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Price\\xA0($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(function (row) {\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.selectTableCell,\n              children: row.isEditMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"done\",\n                  onClick: function onClick() {\n                    return onToggleEditMode(row.id);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"revert\",\n                  onClick: function onClick() {\n                    return onRevert(row.id);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(RevertIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"delete\",\n                onClick: function onClick() {\n                  return onToggleEditMode(row.id);\n                },\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n              row: row,\n              name: \"name\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n              row: row,\n              name: \"description\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n              row: row,\n              name: \"quantity\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n              row: row,\n              name: \"price\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, _this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(TrackProducts, \"rcffYd57byB9SohSIcvRuPwfJZo=\", false, function () {\n  return [useDispatch, useSelector, useStyles];\n});\n\n_c = TrackProducts;\nexport default TrackProducts;\nexport { TrackProducts };\n\nvar _c;\n\n$RefreshReg$(_c, \"TrackProducts\");","map":{"version":3,"sources":["/Users/stanley/Desktop/IPFS/Ecommerce/react-ecommerce-main/src/components/SellerDashboard/TrackProducts.js"],"names":["React","useState","ReactDOM","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Input","Paper","IconButton","EditIcon","DoneIcon","RevertIcon","useSelector","useDispatch","updateProduct","useStyles","theme","root","width","marginTop","spacing","overflowX","table","minWidth","selectTableCell","tableCell","height","input","TrackProducts","dispatch","products","state","main","rows","setRows","previous","setPrevious","classes","onToggleEditMode","id","map","row","isEditMode","onChange","e","value","target","name","newRows","onRevert","CustomTableCell"],"mappings":"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","sourcesContent":["\nimport React, {useState} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\n// Icons\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {updateProduct} from \"../../core/mainSlice\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 650\n  },\n  selectTableCell: {\n    width: 60\n  },\n  tableCell: {\n    // width: 130,\n    // height: 40\n    width: 290,\n    height: 40\n  },\n  input: {\n    width: 130,\n    height: 40\n  }\n}));\n\nconst TrackProducts = () => {\n  const dispatch = useDispatch();\n  const products =  useSelector(state => state?.main?.products);\n  const [rows, setRows] = useState(products);  \n  const [previous, setPrevious] = React.useState({});\n  const classes = useStyles();\n\n  const onToggleEditMode = id => {    \n  \n    setRows(state => {\n      return rows.map(row => {\n        if (row.id === id) {\n          return { ...row, isEditMode: !row.isEditMode };\n        }\n        return row;\n      });\n    });\n  };\n\n  const onChange = (e, row) => {\n    if (!previous[row.id]) {\n      setPrevious(state => ({ ...state, [row.id]: row }));\n    }\n    const value = e.target.value;\n    const name = e.target.name;\n\n    dispatch(updateProduct({value, name, id: row.id}));\n\n    const { id } = row;\n    const newRows = rows.map(row => {\n      if (row.id === id) {\n        return { ...row, [name]: value };\n      }\n      return row;\n    });\n    setRows(newRows);\n  };\n\n  const onRevert = id => {\n    const newRows = rows.map(row => {\n      if (row.id === id) {\n        return previous[id] ? previous[id] : row;\n      }\n      return row;\n    });\n    setRows(newRows);\n    setPrevious(state => {\n      delete state[id];\n      return state;\n    });\n    onToggleEditMode(id);\n  };\n  const CustomTableCell = ({ row, name, onChange }) => {\n    const classes = useStyles();\n    const { isEditMode } = row;\n    return (\n      <TableCell align=\"left\" className={classes.tableCell}>\n        {isEditMode ? (\n          <Input\n            value={row[name]}\n            name={name}\n            onChange={e => onChange(e, row)}\n            className={classes.input}\n          />\n        ) : (\n          row[name]\n        )}\n      </TableCell>\n    );\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table} aria-label=\"caption table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\" />\n            <TableCell align=\"left\">Product Name</TableCell>\n            <TableCell align=\"left\">Product Description </TableCell>\n            <TableCell align=\"left\">Quantity</TableCell>\n            <TableCell align=\"left\">Price&nbsp;($)</TableCell>\n            <TableCell align=\"right\">Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell className={classes.selectTableCell}>\n                {row.isEditMode ? (\n                  <>\n                    <IconButton\n                      aria-label=\"done\"\n                      onClick={() => onToggleEditMode(row.id)}\n                    >\n                      <DoneIcon />\n                    </IconButton>\n                    <IconButton\n                      aria-label=\"revert\"\n                      onClick={() => onRevert(row.id)}\n                    >\n                      <RevertIcon />\n                    </IconButton>\n                  </>\n                ) : (\n                  <IconButton\n                    aria-label=\"delete\"\n                    onClick={() => onToggleEditMode(row.id)}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                )}\n              </TableCell>\n              <CustomTableCell {...{ row, name: \"name\", onChange }} />\n              <CustomTableCell {...{ row, name: \"description\", onChange }} />\n              <CustomTableCell {...{ row, name: \"quantity\", onChange }} />\n              <CustomTableCell {...{ row, name: \"price\", onChange }} />\n              {/* <TableCell><Button variant=\"contained\" color=\"primary\">Delete</Button></TableCell> */}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nexport default TrackProducts;\nexport {TrackProducts};\n\n"]},"metadata":{},"sourceType":"module"}