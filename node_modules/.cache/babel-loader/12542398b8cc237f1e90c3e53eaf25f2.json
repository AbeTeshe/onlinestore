{"ast":null,"code":"import _defineProperty from \"/Users/stanley/Desktop/IPFS/Ecommerce/react-ecommerce-main/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/stanley/Desktop/IPFS/Ecommerce/react-ecommerce-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/stanley/Desktop/IPFS/Ecommerce/react-ecommerce-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/stanley/Desktop/IPFS/Ecommerce/react-ecommerce-main/src/components/SellerDashboard/TrackProducts.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\"; // Icons\n\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3),\n      overflowX: \"auto\"\n    },\n    table: {\n      minWidth: 650\n    },\n    selectTableCell: {\n      width: 60\n    },\n    tableCell: {\n      width: 130,\n      height: 40\n    },\n    input: {\n      width: 130,\n      height: 40\n    }\n  };\n});\n\nvar createData = function createData(name, calories, fat, carbs, protein) {\n  return {\n    id: name.replace(\" \", \"_\"),\n    name: name,\n    calories: calories,\n    fat: fat,\n    carbs: carbs,\n    protein: protein,\n    isEditMode: false\n  };\n};\n\nvar CustomTableCell = function CustomTableCell(_ref) {\n  _s();\n\n  var row = _ref.row,\n      name = _ref.name,\n      _onChange = _ref.onChange;\n  var classes = useStyles();\n  var isEditMode = row.isEditMode;\n  return /*#__PURE__*/_jsxDEV(TableCell, {\n    align: \"left\",\n    className: classes.tableCell,\n    children: isEditMode ? /*#__PURE__*/_jsxDEV(Input, {\n      value: row[name],\n      name: name,\n      onChange: function onChange(e) {\n        return _onChange(e, row);\n      },\n      className: classes.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, _this) : row[name]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CustomTableCell, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomTableCell;\n\nvar TrackProducts = function TrackProducts(_ref2) {\n  _s2();\n\n  var props = _ref2.props;\n  var products = props.products;\n  console.log(\"TrackProducts\", products);\n\n  var _React$useState = React.useState([createData(\"Kettle\", 159, 6.0, 24, 4.0), createData(\"Book\", 237, 9.0, 37, 4.3), createData(\"Coffee\", 262, 16.0, 24, 6.0)]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      rows = _React$useState2[0],\n      setRows = _React$useState2[1];\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      previous = _React$useState4[0],\n      setPrevious = _React$useState4[1];\n\n  var classes = useStyles();\n\n  var onToggleEditMode = function onToggleEditMode(id) {\n    setRows(function (state) {\n      return rows.map(function (row) {\n        if (row.id === id) {\n          return _objectSpread(_objectSpread({}, row), {}, {\n            isEditMode: !row.isEditMode\n          });\n        }\n\n        return row;\n      });\n    });\n  };\n\n  var onChange = function onChange(e, row) {\n    if (!previous[row.id]) {\n      setPrevious(function (state) {\n        return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, row.id, row));\n      });\n    }\n\n    var value = e.target.value;\n    var name = e.target.name;\n    var id = row.id;\n    var newRows = rows.map(function (row) {\n      if (row.id === id) {\n        return _objectSpread(_objectSpread({}, row), {}, _defineProperty({}, name, value));\n      }\n\n      return row;\n    });\n    setRows(newRows);\n  };\n\n  var onRevert = function onRevert(id) {\n    var newRows = rows.map(function (row) {\n      if (row.id === id) {\n        return previous[id] ? previous[id] : row;\n      }\n\n      return row;\n    });\n    setRows(newRows);\n    setPrevious(function (state) {\n      delete state[id];\n      return state;\n    });\n    onToggleEditMode(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"caption table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Listed Price\\xA0($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Product Description \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Original Cost\\xA0($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(function (row) {\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.selectTableCell,\n              children: row.isEditMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"done\",\n                  onClick: function onClick() {\n                    return onToggleEditMode(row.id);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"revert\",\n                  onClick: function onClick() {\n                    return onRevert(row.id);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(RevertIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"delete\",\n                onClick: function onClick() {\n                  return onToggleEditMode(row.id);\n                },\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n              row: row,\n              name: \"name\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n              row: row,\n              name: \"calories\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n              row: row,\n              name: \"fat\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n              row: row,\n              name: \"carbs\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n              row: row,\n              name: \"protein\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, _this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(TrackProducts, \"7d7qeTGQkBEVY1t/8ds1vukmuao=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = TrackProducts;\nexport default TrackProducts;\nexport { TrackProducts };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomTableCell\");\n$RefreshReg$(_c2, \"TrackProducts\");","map":{"version":3,"sources":["/Users/stanley/Desktop/IPFS/Ecommerce/react-ecommerce-main/src/components/SellerDashboard/TrackProducts.js"],"names":["React","ReactDOM","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Input","Paper","IconButton","EditIcon","DoneIcon","RevertIcon","useStyles","theme","root","width","marginTop","spacing","overflowX","table","minWidth","selectTableCell","tableCell","height","input","createData","name","calories","fat","carbs","protein","id","replace","isEditMode","CustomTableCell","row","onChange","classes","e","TrackProducts","props","products","console","log","useState","rows","setRows","previous","setPrevious","onToggleEditMode","state","map","value","target","newRows","onRevert"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\n// Icons\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 650\n  },\n  selectTableCell: {\n    width: 60\n  },\n  tableCell: {\n    width: 130,\n    height: 40\n  },\n  input: {\n    width: 130,\n    height: 40\n  }\n}));\n\nconst createData = (name, calories, fat, carbs, protein) => ({\n  id: name.replace(\" \", \"_\"),\n  name,\n  calories,\n  fat,\n  carbs,\n  protein,\n  isEditMode: false\n});\n\nconst CustomTableCell = ({ row, name, onChange }) => {\n  const classes = useStyles();\n  const { isEditMode } = row;\n  return (\n    <TableCell align=\"left\" className={classes.tableCell}>\n      {isEditMode ? (\n        <Input\n          value={row[name]}\n          name={name}\n          onChange={e => onChange(e, row)}\n          className={classes.input}\n        />\n      ) : (\n        row[name]\n      )}\n    </TableCell>\n  );\n};\n\nconst TrackProducts = ({props}) => {\n\n\nconst {products} = props;\nconsole.log(\"TrackProducts\",products);\n\n  const [rows, setRows] = React.useState([\n    createData(\"Kettle\", 159, 6.0, 24, 4.0),\n    createData(\"Book\", 237, 9.0, 37, 4.3),\n    createData(\"Coffee\", 262, 16.0, 24, 6.0)\n  ]);\n  const [previous, setPrevious] = React.useState({});\n  const classes = useStyles();\n\n  const onToggleEditMode = id => {\n    setRows(state => {\n      return rows.map(row => {\n        if (row.id === id) {\n          return { ...row, isEditMode: !row.isEditMode };\n        }\n        return row;\n      });\n    });\n  };\n\n  const onChange = (e, row) => {\n    if (!previous[row.id]) {\n      setPrevious(state => ({ ...state, [row.id]: row }));\n    }\n    const value = e.target.value;\n    const name = e.target.name;\n    const { id } = row;\n    const newRows = rows.map(row => {\n      if (row.id === id) {\n        return { ...row, [name]: value };\n      }\n      return row;\n    });\n    setRows(newRows);\n  };\n\n  const onRevert = id => {\n    const newRows = rows.map(row => {\n      if (row.id === id) {\n        return previous[id] ? previous[id] : row;\n      }\n      return row;\n    });\n    setRows(newRows);\n    setPrevious(state => {\n      delete state[id];\n      return state;\n    });\n    onToggleEditMode(id);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table} aria-label=\"caption table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\" />\n            <TableCell align=\"left\">Product Name</TableCell>\n            <TableCell align=\"left\">Quantity</TableCell>\n            <TableCell align=\"left\">Listed Price&nbsp;($)</TableCell>\n            <TableCell align=\"left\">Product Description </TableCell>\n            <TableCell align=\"left\">Original Cost&nbsp;($)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell className={classes.selectTableCell}>\n                {row.isEditMode ? (\n                  <>\n                    <IconButton\n                      aria-label=\"done\"\n                      onClick={() => onToggleEditMode(row.id)}\n                    >\n                      <DoneIcon />\n                    </IconButton>\n                    <IconButton\n                      aria-label=\"revert\"\n                      onClick={() => onRevert(row.id)}\n                    >\n                      <RevertIcon />\n                    </IconButton>\n                  </>\n                ) : (\n                  <IconButton\n                    aria-label=\"delete\"\n                    onClick={() => onToggleEditMode(row.id)}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                )}\n              </TableCell>\n              <CustomTableCell {...{ row, name: \"name\", onChange }} />\n              <CustomTableCell {...{ row, name: \"calories\", onChange }} />\n              <CustomTableCell {...{ row, name: \"fat\", onChange }} />\n              <CustomTableCell {...{ row, name: \"carbs\", onChange }} />\n              <CustomTableCell {...{ row, name: \"protein\", onChange }} />\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nexport default TrackProducts;\nexport {TrackProducts};\n\n"]},"metadata":{},"sourceType":"module"}